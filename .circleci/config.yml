version: 2.1

jobs:
  # Job 1: Build
  build:
    docker:
      - image: cimg/node:22.11.0  # Use a Node.js Docker image
    working_directory: ~/repo  # Set the working directory to the root where your 'repo' is checked out

    steps:
      - checkout  # Pulls your repository into ~/repo
      - run:
          name: List directory contents
          command: |
            ls -l ~/repo  # Ensure CircleCI checks out to ~/repo and lists files
      - run:
          name: Install dependencies
          command: |
            cd ~/repo/server  # Navigate into the 'server' directory
            npm install  # Install npm dependencies from package.json inside server
      - persist_to_workspace:
          root: ~/repo  # Persist the entire repo to workspace
          paths:
            - server/node_modules  # Persist the node_modules directory for reuse in subsequent jobs

  # Job 2: Linter (ESLint)
  linter:
    docker:
      - image: cimg/node:22.11.0  # Use a Node.js Docker image
    working_directory: ~/repo  # Set the working directory to the root where your 'repo' is checked out

    steps:
      - attach_workspace:
          at: ~/repo  # Attach the persisted workspace (repo and node_modules)
      - run:
          name: Run ESLint
          command: |
            cd ~/repo/server  # Navigate into the 'server' directory
            npm run lint  # Run the linting script to check for code issues

  # Job 3: Jest Test
  jest_test:
    docker:
      - image: cimg/node:22.11.0  # Use a Node.js Docker image
    working_directory: ~/repo  # Set the working directory to the root where your 'repo' is checked out

    steps:
      - attach_workspace:
          at: ~/repo  # Attach the persisted workspace (repo and node_modules)
      - run:
          name: Run Jest tests
          command: |
            cd ~/repo/server  # Navigate into the 'server' directory
            npm test  # Run the tests using Jest

workflows:
  version: 2
  build_and_test:
    jobs:
      - build  # First, run the build job
      - linter_test:  # Second, run the linter job
          requires:
            - build  # Ensure the build job completes first
      - jest_test:  # Third, run the Jest tests
          requires:
            - build  # Ensure the build job completes first
